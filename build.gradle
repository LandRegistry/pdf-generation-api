plugins {
    id 'java'
    id 'application'
    id 'jacoco'
    id 'com.github.johnrengelman.shadow' version '1.2.4'
}

mainClassName = 'pdfgenerationapi.Main'

repositories {
    maven {
        url "http://download.osgeo.org/webdav/geotools"
    }
    maven {
        url "http://repo.boundlessgeo.com/main"
    }
    jcenter()
}

shadowJar{
    archiveName = "pdf-generation-api.${extension}"
}

sourceCompatibility = 1.8

dependencies {
    compile 'org.slf4j:slf4j-api:1.7.25'
    compile 'ch.qos.logback:logback-core:1.2.3'
    compile 'ch.qos.logback:logback-classic:1.2.3'
    compile 'net.logstash.logback:logstash-logback-encoder:4.9'

    compile 'com.sparkjava:spark-core:2.7.2'

    compile 'com.mashape.unirest:unirest-java:1.4.9'

    compile 'org.apache.commons:commons-lang3:3.5'
    compile 'commons-io:commons-io:2.5'

    compile 'com.itextpdf:itext7-core:7.1.2'
    compile 'org.bouncycastle:bcpkix-jdk15on:1.57'
    compile 'org.bouncycastle:bcprov-jdk15on:1.57'
    compile 'org.bouncycastle:bcmail-jdk15on:1.57'

    compile 'com.google.code.gson:gson:2.8.1'
    compile 'com.fasterxml.jackson.core:jackson-core'
    compile 'com.github.java-json-tools:json-schema-validator:2.2.8'

    testCompile 'junit:junit:4.12'
    testCompile 'org.hamcrest:java-hamcrest:2.0.0.0'
    testCompile "org.easymock:easymock:3.4"
    testCompile "org.powermock:powermock-module-junit4:1.6.5"
    testCompile "org.powermock:powermock-api-easymock:1.6.5"

    // Map image dependencies
    def geoToolsVersion = '17.1'

    compile "org.geotools:gt-wms:$geoToolsVersion"
    compile "org.geotools:gt-geojson:$geoToolsVersion"
    compile "org.geotools:gt-epsg-hsql:$geoToolsVersion"

    compile "com.github.jai-imageio:jai-imageio-core:1.3.0"

    compile fileTree(dir: 'libs', include: '*.jar')
}

jacocoTestReport {
    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, includes: ['pdfgenerationapi/views/logic/**',
                                         'pdfgenerationapi/models/**',
                                         'pdfgenerationapi/services/**',
                                         'pdfgenerationapi/views/v1_0/**',
                                         'pdfgenerationapi/utils/**',
                                         'pdfgenerator/**',
                                         'mapimage/**'])
        })
    }
}
